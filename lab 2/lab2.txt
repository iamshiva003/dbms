2. Consider the following schema for Order Database:
SALESMAN (Salesman_id, Name, City, Commission)
CUSTOMER (Customer_id, Cust_Name, City, Grade,Salesman_id)
ORDERS (Ord_No, Purchase_Amt, Ord_Date, #Customer_id, Salesman_id)
    Write SQL queries to
    i. Count the customers with grades above Bangalore’s average.
    ii. Find the name and numbers of all salesmen who had more than one customer.
    iii. List all salesmen and indicate those who have and don’t have customers in their cities (Use UNION operation.)
    iv. Create a view that finds the salesman who has the customer with the highest order of a day.
    v. Demonstrate the DELETE operation by removing salesman with id 1000. All his orders must also be deleted.


mysql> create database order_details;
Query OK, 1 row affected (0.09 sec)

mysql> use order_details;
Database changed

mysql> create table salesman(salesmanid int PRIMARY KEY, name varchar(20), city varchar(20), commission int);
Query OK, 0 rows affected (0.16 sec)

mysql> create table customer(customerid int PRIMARY KEY, cust_name varchar(10), city varchar(10), grade int, salesmanid int references salesman(salesmanid));
Query OK, 0 rows affected (0.16 sec)

mysql> create table orders(ordno int, purchase_amt int, ord_date date, customerid int references customer(customerid), salesmanid int references salesman(salesmanid));
Query OK, 0 rows affected (0.17 sec)

mysql> insert into salesman values(01, 'John', 'Bangalore', 1500),
    -> (02, 'Johnny', 'Hubli', 2000),
    -> (03, 'Janardhan', 'Dharwad', 2500),
    -> (04, 'Akash', 'Bangalore', 1800),
    -> (05, 'Anand', 'Gadag', 3000);
Query OK, 5 rows affected (0.03 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> insert into customer values
    -> (11, 'Akshay', 'Bangalore', 10, 01),
    -> (22, 'Nagaraj', 'Mysore', 20, 02),
    -> (33, 'Rahul', 'Mangalore', 10, 03),
    -> (44, 'Swati', 'Hubli', 30, 04),
    -> (55, 'Yash', 'Gadag', 20, 05);
Query OK, 5 rows affected (0.03 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> insert into orders values
    -> (111, 13000, '2022-01-01', 11, 1),
    -> (222, 15000, '2022-02-02', 22, 2),
    -> (333, 20000, '2022-03-03', 33, 3),
    -> (444, 25000, '2022-04-04', 44, 4),
    -> (555, 30000, '2022-05-05', 55, 5);
Query OK, 5 rows affected (0.04 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select * from salesman;
+------------+-----------+-----------+------------+
| salesmanid | name      | city      | commission |
+------------+-----------+-----------+------------+
|          1 | John      | Bangalore |       1500 |
|          2 | Johnny    | Hubli     |       2000 |
|          3 | Janardhan | Dharwad   |       2500 |
|          4 | Akash     | Bangalore |       1800 |
|          5 | Anand     | Gadag     |       3000 |
+------------+-----------+-----------+------------+
5 rows in set (0.00 sec)

mysql> select * from customer;
+------------+-----------+-----------+-------+------------+
| customerid | cust_name | city      | grade | salesmanid |
+------------+-----------+-----------+-------+------------+
|         11 | Akshay    | Bangalore |    10 |          1 |
|         22 | Nagaraj   | Mysore    |    20 |          2 |
|         33 | Rahul     | Mangalore |    10 |          3 |
|         44 | Swati     | Hubli     |    30 |          4 |
|         55 | Yash      | Gadag     |    20 |          5 |
+------------+-----------+-----------+-------+------------+
5 rows in set (0.01 sec)

mysql> select * from orders;
+-------+--------------+------------+------------+------------+
| ordno | purchase_amt | ord_date   | customerid | salesmanid |
+-------+--------------+------------+------------+------------+
|   111 |        13000 | 2022-01-01 |         11 |          1 |
|   222 |        15000 | 2022-02-02 |         22 |          2 |
|   333 |        20000 | 2022-03-03 |         33 |          3 |
|   444 |        25000 | 2022-04-04 |         44 |          4 |
|   555 |        30000 | 2022-05-05 |         55 |          5 |
+-------+--------------+------------+------------+------------+
5 rows in set (0.00 sec)

mysql> select count(*) from customer where grade > (select avg(grade) from customer where city = 'Bangalore');
+----------+
| count(*) |
+----------+
|        3 |
+----------+
1 row in set (0.01 sec)

mysql> select name, salesmanid from salesman s where 1>(select count(*) from customer where salesmanid = s.salesmanid);
Empty set (0.10 sec)

mysql> select s.salesmanid, name, cust_name, commission from salesman s, customer c where s.city = c.city UNION(select salesmanid, name, 'NO MATCH', commission from salesman where NOT city = any(select city from customer)) order by 2 desc;
+------------+-----------+-----------+------------+
| salesmanid | name      | cust_name | commission |
+------------+-----------+-----------+------------+
|          2 | Johnny    | Swati     |       2000 |
|          1 | John      | Akshay    |       1500 |
|          3 | Janardhan | NO MATCH  |       2500 |
|          5 | Anand     | Yash      |       3000 |
|          4 | Akash     | Akshay    |       1800 |
+------------+-----------+-----------+------------+
5 rows in set (0.05 sec)

mysql> create view elitsalesman1 as select o.ord_date, s.salesmanid, s.name from salesman s, orders o where s.salesmanid = o.salesmanid and purchase_amt = (select max(purchase_amt) from orders c where c.ord_date = o.ord_date);
Query OK, 0 rows affected (0.07 sec)

mysql> select * from elitsalesman1;
+------------+------------+-----------+
| ord_date   | salesmanid | name      |
+------------+------------+-----------+
| 2022-01-01 |          1 | John      |
| 2022-02-02 |          2 | Johnny    |
| 2022-03-03 |          3 | Janardhan |
| 2022-04-04 |          4 | Akash     |
| 2022-05-05 |          5 | Anand     |
+------------+------------+-----------+
5 rows in set (0.01 sec)

